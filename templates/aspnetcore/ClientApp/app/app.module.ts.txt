import { {{titlecase}}CreateComponent } from './components/{{dashlcase}}/{{dashlcase}}-create/{{dashlcase}}-create.component';
import { {{titlecase}}EditComponent } from './components/{{dashlcase}}/{{dashlcase}}-edit/{{dashlcase}}-edit.component';
import { {{titlecase}}EditActivate } from './components/{{dashlcase}}/{{dashlcase}}-edit/{{dashlcase}}-edit.activate';
import { {{titlecase}}ApiService } from './services/{{dashlcase}}.api.service';
import { {{titlecase}}ListComponent } from './components/{{dashlcase}}/{{dashlcase}}-list/{{dashlcase}}-list.component';

// 3rd Party modules
import { NgRedux, NgReduxModule } from '@angular-redux/store';

// Redux store
import { IAppState, rootReducer, INITIAL_STATE } from './store';

// App init
import { AppLoadService } from './services/app-load.service';

export function initApp(appLoadService: AppLoadService) {
  return () => appLoadService.initializeApp();
}

@NgModule({
  bootstrap: [AppComponent],
  declarations: [
    {{titlecase}}ListComponent,
    {{titlecase}}EditComponent,
    {{titlecase}}CreateComponent
  ],
  imports: [
    RouterModule.forRoot([
      
      { path: '{{plcase}}', component: {{titlecase}}ListComponent },
      { path: '{{plcase}}/add', component: {{titlecase}}CreateComponent },
      { path: '{{plcase}}/:id', component: {{titlecase}}EditComponent, canActivate: [{{titlecase}}EditActivate]  },
      
    ])
  ],
  providers: [
    {{titlecase}}ApiService,
    {{titlecase}}EditActivate,
    { provide: ErrorHandler, useClass: AppErrorHandler },
    { provide: APP_INITIALIZER, useFactory: initApp, deps: [AppLoadService], multi: true }
  ]
})
export class AppModule {
  constructor() {
  }
}
